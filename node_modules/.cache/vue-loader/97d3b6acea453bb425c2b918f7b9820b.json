{"remainingRequest":"D:\\Study\\Vuejs\\quizapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Study\\Vuejs\\quizapp\\src\\components\\QuestionBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Study\\Vuejs\\quizapp\\src\\components\\QuestionBox.vue","mtime":1620733712779},{"path":"D:\\Study\\Vuejs\\quizapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Study\\Vuejs\\quizapp\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Study\\Vuejs\\quizapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Study\\Vuejs\\quizapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgXyBmcm9tICdsb2Rhc2gnDQpleHBvcnQgZGVmYXVsdCB7DQogICAgcHJvcHM6IHsNCiAgICAgICAgY3VycmVudFF1ZXN0aW9uOiBPYmplY3QsDQogICAgICAgIG5leHQ6IEZ1bmN0aW9uLA0KICAgICAgICBpbmNyZW1lbnQ6IEZ1bmN0aW9uDQogICAgfSwNCiAgICBkYXRhKCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgc2VsZWN0ZWRJbmRleDogbnVsbCwNCiAgICAgICAgICAgIGNvcnJlY3RJbmRleDogbnVsbCwNCiAgICAgICAgICAgIHNodWZmbGVBbnN3ZXJzOiBbXSwNCiAgICAgICAgICAgIGFuc3dlcmVkOiBmYWxzZQ0KICAgICAgICB9DQogICAgfSwNCiAgICAvLyBjb21wdXRlZDogew0KICAgIC8vICAgICBhbnN3ZXJzKCkgew0KICAgIC8vICAgICAgICAgbGV0IGFuc3dlcnMgPSBbLi4udGhpcy5jdXJyZW50UXVlc3Rpb24uaW5jb3JyZWN0X2Fuc3dlcnNdDQogICAgLy8gICAgICAgICBhbnN3ZXJzLnB1c2godGhpcy5jdXJyZW50UXVlc3Rpb24uY29ycmVjdF9hbnN3ZXIpDQogICAgLy8gICAgICAgICByZXR1cm4gYW5zd2Vycw0KICAgIC8vICAgICB9DQogICAgLy8gfSwNCiAgICB3YXRjaDogew0KICAgICAgICBjdXJyZW50UXVlc3Rpb246IHsNCiAgICAgICAgICAgIGltbWVkaWF0ZTogdHJ1ZSwNCiAgICAgICAgICAgIGhhbmRsZXIoKXsNCiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkSW5kZXggPSBudWxsDQogICAgICAgICAgICAgICAgdGhpcy5hbnN3ZXJlZCA9IGZhbHNlDQogICAgICAgICAgICAgICAgdGhpcy5zaHVmZmxlQW5zd2VyKCkNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0sDQogICAgbWV0aG9kczogew0KICAgICAgICBzZWxlY3RBbnN3ZXIoaW5kZXgpew0KICAgICAgICAgICAgdGhpcy5zZWxlY3RlZEluZGV4PSBpbmRleA0KICAgICAgICB9LA0KICAgICAgICBzdWJtaXRBbnN3ZXIoKXsNCiAgICAgICAgICAgIGxldCBpc0NvcnJlY3QgPSBmYWxzZQ0KDQogICAgICAgICAgICBpZih0aGlzLnNlbGVjdGVkSW5kZXggPT09IHRoaXMuY29ycmVjdEluZGV4KXsNCiAgICAgICAgICAgICAgICBpc0NvcnJlY3QgPSB0cnVlDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRoaXMuYW5zd2VyZWQgPSB0cnVlDQoNCiAgICAgICAgICAgIHRoaXMuaW5jcmVtZW50KGlzQ29ycmVjdCkNCiAgICAgICAgfSwNCiAgICAgICAgc2h1ZmZsZUFuc3dlcigpew0KICAgICAgICAgICAgbGV0IGFuc3dlcnMgPSBbLi4udGhpcy5jdXJyZW50UXVlc3Rpb24uaW5jb3JyZWN0X2Fuc3dlcnMsIHRoaXMuY3VycmVudFF1ZXN0aW9uLmNvcnJlY3RfYW5zd2VyXQ0KICAgICAgICAgICAgdGhpcy5zaHVmZmxlQW5zd2VycyA9IF8uc2h1ZmZsZShhbnN3ZXJzKQ0KDQogICAgICAgICAgICB0aGlzLmNvcnJlY3RJbmRleCA9IHRoaXMuc2h1ZmZsZUFuc3dlcnMuaW5kZXhPZih0aGlzLmN1cnJlbnRRdWVzdGlvbi5jb3JyZWN0X2Fuc3dlcikNCiAgICAgICAgfSwNCiAgICAgICAgYW5zd2VyQ2xhc3MoaW5kZXgpew0KICAgICAgICAgICAgbGV0IGFuc3dlckNsYXNzID0gJycNCg0KICAgICAgICAgICAgaWYoIXRoaXMuYW5zd2VyZWQgJiYgdGhpcy5zZWxlY3RlZEluZGV4ID09PSBpbmRleCl7DQogICAgICAgICAgICAgICAgYW5zd2VyQ2xhc3MgPSAnc2VsZWN0ZWQnDQogICAgICAgICAgICB9ZWxzZSBpZih0aGlzLmFuc3dlcmVkICYmIHRoaXMuY29ycmVjdEluZGV4ID09PSBpbmRleCl7DQogICAgICAgICAgICAgICAgYW5zd2VyQ2xhc3MgPSAnY29ycmVjdCcNCiAgICAgICAgICAgIH1lbHNlIGlmKHRoaXMuYW5zd2VyZWQgJiYgdGhpcy5zZWxlY3RlZEluZGV4ID09PSBpbmRleCAmJiB0aGlzLmNvcnJlY3RJbmRleCAhPT0gaW5kZXgpew0KICAgICAgICAgICAgICAgIGFuc3dlckNsYXNzID0gJ2luY29ycmVjdCcNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIGFuc3dlckNsYXNzDQogICAgICAgIH0NCiAgICB9LA0KICAgIG1vdW50ZWQoKSB7DQogICAgfQ0KfQ0K"},{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"question-box-container\">\r\n        <b-jumbotron>\r\n            <template #lead>\r\n                {{currentQuestion.question}}\r\n            </template>\r\n\r\n            <hr class=\"my-4\">\r\n\r\n            <b-list-group>\r\n                <b-list-group-item\r\n                    v-for=\"(shuffleAnswer, index) in shuffleAnswers\" \r\n                    :key=\"index\"\r\n                    @click.prevent=\"selectAnswer(index)\"\r\n                    :class=\"answerClass(index)\"\r\n                >\r\n                    {{shuffleAnswer}}\r\n                </b-list-group-item>\r\n            </b-list-group>\r\n            <b-button @click=\"back\" variant=\"cancel\" :disabled=\"selectedIndex === null\">\r\n                Back\r\n            </b-button>\r\n            <b-button @click=\"next\" variant=\"success\" :disabled=\"selectedIndex === null\">\r\n                Next\r\n            </b-button>\r\n            <b-button \r\n                variant=\"primary\"\r\n                v-on:click=\"submitAnswer\"\r\n                :disabled=\"selectedIndex === null || answered\"\r\n            >\r\n                Submit\r\n            </b-button>\r\n\r\n            \r\n        </b-jumbotron>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport _ from 'lodash'\r\nexport default {\r\n    props: {\r\n        currentQuestion: Object,\r\n        next: Function,\r\n        increment: Function\r\n    },\r\n    data() {\r\n        return {\r\n            selectedIndex: null,\r\n            correctIndex: null,\r\n            shuffleAnswers: [],\r\n            answered: false\r\n        }\r\n    },\r\n    // computed: {\r\n    //     answers() {\r\n    //         let answers = [...this.currentQuestion.incorrect_answers]\r\n    //         answers.push(this.currentQuestion.correct_answer)\r\n    //         return answers\r\n    //     }\r\n    // },\r\n    watch: {\r\n        currentQuestion: {\r\n            immediate: true,\r\n            handler(){\r\n                this.selectedIndex = null\r\n                this.answered = false\r\n                this.shuffleAnswer()\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        selectAnswer(index){\r\n            this.selectedIndex= index\r\n        },\r\n        submitAnswer(){\r\n            let isCorrect = false\r\n\r\n            if(this.selectedIndex === this.correctIndex){\r\n                isCorrect = true\r\n            }\r\n\r\n            this.answered = true\r\n\r\n            this.increment(isCorrect)\r\n        },\r\n        shuffleAnswer(){\r\n            let answers = [...this.currentQuestion.incorrect_answers, this.currentQuestion.correct_answer]\r\n            this.shuffleAnswers = _.shuffle(answers)\r\n\r\n            this.correctIndex = this.shuffleAnswers.indexOf(this.currentQuestion.correct_answer)\r\n        },\r\n        answerClass(index){\r\n            let answerClass = ''\r\n\r\n            if(!this.answered && this.selectedIndex === index){\r\n                answerClass = 'selected'\r\n            }else if(this.answered && this.correctIndex === index){\r\n                answerClass = 'correct'\r\n            }else if(this.answered && this.selectedIndex === index && this.correctIndex !== index){\r\n                answerClass = 'incorrect'\r\n            }\r\n\r\n            return answerClass\r\n        }\r\n    },\r\n    mounted() {\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .list-group{\r\n        margin-bottom: 15px;\r\n    }\r\n    .list-group-item:hover{\r\n        background: #eee;\r\n        cursor: pointer;\r\n    }\r\n    .btn {\r\n        margin: 0 5px;\r\n    }\r\n\r\n    .selected{\r\n        background: rgb(167, 220, 255);\r\n    }\r\n    .correct {\r\n        background: rgb(176, 255, 176);\r\n    }\r\n    .incorrect {\r\n        background: rgb(255, 164, 164);\r\n    }\r\n</style>"]}]}